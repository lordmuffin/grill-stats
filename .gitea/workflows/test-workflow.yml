name: Test Workflow

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r requirements.txt
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

      - name: Run tests
        run: |
          python -m pytest tests/unit/ -v
          # Uncomment when integration tests are ready to run in CI
          # python -m pytest tests/integration/ -v

  microservice-tests:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        service: [device-service, temperature-service, historical-data-service, data-pipeline]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f services/${{ matrix.service }}/requirements.txt ]; then 
            pip install -r services/${{ matrix.service }}/requirements.txt
          fi
          if [ -f services/${{ matrix.service }}/requirements-test.txt ]; then 
            pip install -r services/${{ matrix.service }}/requirements-test.txt
          fi

      - name: Run microservice tests
        run: |
          cd services/${{ matrix.service }}
          if [ -d tests ]; then
            python -m pytest tests/unit/ -v
          fi