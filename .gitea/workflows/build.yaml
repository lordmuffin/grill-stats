name: Build and Test Grill Stats

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies and Lint
        container:
          image: python:3.11-slim
        run: |
          # 1. Create a virtual environment in the shared workspace
          python -m venv /workspace/venv
          
          # 2. Activate the virtual environment for subsequent commands
          . /workspace/venv/bin/activate
          
          # 3. Install packages into the isolated venv
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt found"
          fi
          
          # 4. Install and run flake8 from within the venv
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    needs: test
    runs-on: ubuntu-latest
    env:
      GITEA_REGISTRY: gitea-http.gitea.svc.cluster.local:3000
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # FIX: Reverted to a container: block to reliably create the Kaniko config file.
      # This is the most robust way to handle insecure registries.
      - name: Build and Push with Kaniko
        container:
          image: gcr.io/kaniko-project/executor:v1.9.0
        run: |
          # 1. Create Kaniko's config directory
          mkdir -p /kaniko/.docker
          
          # 2. Create the config.json file with credentials AND the insecure-registry setting.
          # This explicitly tells Kaniko to use HTTP for your internal registry.
          echo '{"auths":{"${{ env.GITEA_REGISTRY }}":{"username":"${{ secrets.REGISTRY_USERNAME }}","password":"${{ secrets.REGISTRY_PASSWORD }}"}},"http-insecure-registries":["${{ env.GITEA_REGISTRY }}"]}' > /kaniko/.docker/config.json

          # 3. Run the Kaniko executor
          /kaniko/executor \
            --context=/workspace \
            --dockerfile=/workspace/Dockerfile \
            --destination=${{ env.GITEA_REGISTRY }}/lordmuffin/grill-stats:latest \
            --customPlatform=linux/amd64
