name: Build and Test Grill Stats

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    container:
      image: python:3.11-slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Python setup is not needed since we're using a Python container
      # This step is removed to avoid potential conflicts

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test application startup
        run: |
          # Test that the application can import without errors
          # python -c "import app; print('✅ App imports successfully')"
          # python -c "import thermoworks_client; print('✅ ThermoWorks client imports successfully')"
          # python -c "import homeassistant_client; print('✅ Home Assistant client imports successfully')"

  build:
    needs: test
    container:
      image: gcr.io/kaniko-project/executor:v1.9.0-debug
      entrypoint: [""]
      args: [""]
      env:
        HOME: /kaniko
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Kaniko configuration
        run: |
          mkdir -p /kaniko/.docker
          echo '{"auths":{"gitea.lab.apj.dev":{"username":"${{ secrets.REGISTRY_USERNAME }}","password":"${{ secrets.REGISTRY_PASSWORD }}"}}}' > /kaniko/.docker/config.json

      - name: Get image tags
        id: tags
        run: |
          TAG=""
          if [[ "$GITEA_REF" == refs/tags/* ]]; then
            TAG=${GITEA_REF#refs/tags/}
            echo "TAG=${TAG}" >> $GITEA_ENV
            echo "ADDITIONAL_TAG=latest" >> $GITEA_ENV
          elif [[ "$GITEA_REF" == refs/heads/main ]]; then
            TAG=main
            COMMIT_SHA=$(echo ${GITEA_SHA} | cut -c1-7)
            echo "TAG=${TAG}" >> $GITEA_ENV
            echo "ADDITIONAL_TAG=sha-${COMMIT_SHA}" >> $GITEA_ENV
          else
            TAG=${GITEA_REF#refs/heads/}
            COMMIT_SHA=$(echo ${GITEA_SHA} | cut -c1-7)
            echo "TAG=${TAG}" >> $GITEA_ENV
            echo "ADDITIONAL_TAG=sha-${COMMIT_SHA}" >> $GITEA_ENV
          fi

      - name: Build with Kaniko (without pushing)
        run: |
          # First try without pushing to ensure build works
          /kaniko/executor \
            --context="${PWD}" \
            --no-push \
            --cache=true \
            --cache-ttl=168h \
            --cleanup
          
      - name: Build and push with Kaniko (if build succeeds)
        run: |
          echo "Building and pushing image..."
          /kaniko/executor \
            --context="${PWD}" \
            --destination="gitea.lab.apj.dev/lordmuffin/grill-stats:latest" \
            --cache=true \
            --cache-ttl=168h