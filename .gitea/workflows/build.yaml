name: Build and Test Grill Stats

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    # FIX 1: Added the mandatory 'runs-on' key.
    # You may need to change 'ubuntu-latest' to match the label of your runners.
    runs-on: ubuntu-latest
    container:
      image: python:3.11-slim
    steps:
      - name: Install Git
        run: |
          apt-get update -qq && apt-get install -y -qq git

      # FIX 2: Use the standard 'actions/checkout' action. It's simpler and more reliable.
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: lordmuffin/grill-stats
          ref: main

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt found"
          fi

      - name: Lint with flake8
        run: |
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    needs: test
    # FIX 1: Added the mandatory 'runs-on' key.
    runs-on: ubuntu-latest
    steps:
      # FIX 2: Use the standard checkout action first.
      # This step runs in the default runner environment and places code in the shared workspace.
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          repository: lordmuffin/grill-stats
          ref: main

      # FIX 3: This step now correctly uses the Kaniko container.
      # The 'run' command is replaced with 'with' and 'args' to pass commands to the container.
      - name: Build and Push with Kaniko
        uses: docker://gcr.io/kaniko-project/executor:v1.9.0
        env:
          # Secrets are passed as environment variables
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        with:
          # 'args' passes commands directly to the Kaniko container's entrypoint.
          # This is the correct way to run commands in a container specified with 'uses'.
          args: |
            --context=dir:///workspace/
            --dockerfile=./Dockerfile
            --destination=gitea-internal/your-image-name:latest
            --custom-platform=linux/amd64

