name: Build and Test Grill Stats
# Pipeline bump: 2025-07-06T21:32:00Z - Force pipeline execution

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    env:
      GITEA_REGISTRY: gitea-http.gitea.svc.cluster.local:3000
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies and Lint
        run: |
          # Install packages
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt found"
          fi
          
          # Install and run flake8
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Setup Kaniko
        run: |
          # Return to Kaniko but with different approach
          echo "Setting up Kaniko executor..."
          
          # Download Kaniko executor
          curl -L https://github.com/google/go-containerregistry/releases/latest/download/go-containerregistry_Linux_x86_64.tar.gz | tar -xzf - -C /tmp/ crane
          /tmp/crane export gcr.io/kaniko-project/executor:v1.23.2 - | tar -xf - -C /tmp/ kaniko/executor
          cp /tmp/kaniko/executor /tmp/executor
          chmod +x /tmp/executor
          
          # Test registry connectivity
          echo "Testing registry connectivity..."
          curl -v -u "${{ secrets.REGISTRY_USERNAME }}:${{ secrets.REGISTRY_PASSWORD }}" \
               http://${{ env.GITEA_REGISTRY }}/v2/ || echo "Basic auth test completed"

      - name: Build and Push with Kaniko to Local, then Crane
        run: |
          # Debug: Check environment
          echo "Registry: ${{ env.GITEA_REGISTRY }}"
          echo "Destination: ${{ env.GITEA_REGISTRY }}/gitea-admin/grill-stats:test"
          
          # Build with Kaniko to local tar file (no registry push)
          echo "Building container image to local tar..."
          
          # Create tar context
          tar -czf /tmp/context.tar.gz --exclude='.git' --exclude='.gitea' .
          
          # Run Kaniko to build and export to tar (no push)
          /tmp/executor \
            --context=tar:///tmp/context.tar.gz \
            --tarPath=/tmp/image.tar \
            --no-push \
            --custom-platform=linux/amd64 \
            --single-snapshot
          
          # Use crane to push the tar to registry with explicit auth
          echo "Pushing with crane..."
          
          # Create Docker config for crane
          mkdir -p ~/.docker
          AUTH_STRING=$(echo -n "${{ secrets.REGISTRY_USERNAME }}:${{ secrets.REGISTRY_PASSWORD }}" | base64 -w 0)
          cat > ~/.docker/config.json << EOF
          {
            "auths": {
              "${{ env.GITEA_REGISTRY }}": {
                "auth": "${AUTH_STRING}"
              }
            }
          }
          EOF
          
          # Test the tar file first
          echo "Testing tar file:"
          ls -la /tmp/image.tar
          
          # Try pushing with crane first
          echo "Attempting push with crane..."
          echo "Target registry: ${{ env.GITEA_REGISTRY }}/gitea-admin/grill-stats:test"
          echo "Testing crane auth..."
          /tmp/crane auth list || echo "No existing crane auth"
          echo "Docker config contents:"
          cat ~/.docker/config.json
          
          if ! /tmp/crane push /tmp/image.tar ${{ env.GITEA_REGISTRY }}/gitea-admin/grill-stats:test \
            --platform=linux/amd64 \
            --debug; then
            echo "Crane push failed, trying Docker load and push..."
            
            # Alternative: Use Docker to load and push the image
            echo "Loading image with Docker..."
            docker load -i /tmp/image.tar
            
            echo "Tagging image..."
            docker tag $(docker images --format "{{.Repository}}:{{.Tag}}" | head -1) ${{ env.GITEA_REGISTRY }}/gitea-admin/grill-stats:test
            
            echo "Logging into registry with Docker..."
            echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ env.GITEA_REGISTRY }} -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
            
            echo "Pushing with Docker..."
            if docker push ${{ env.GITEA_REGISTRY }}/gitea-admin/grill-stats:test; then
              echo "✅ Docker push succeeded!"
              exit 0
            else
              echo "❌ Docker push also failed"
              exit 1
            fi
          fi
