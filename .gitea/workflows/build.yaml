name: Build and Test Grill Stats
# Pipeline bump: 2025-07-06T21:32:00Z - Force pipeline execution

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    env:
      GITEA_REGISTRY: gitea-internal.gitea.svc.cluster.local:80
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies and Lint
        run: |
          # Install packages
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt found"
          fi
          
          # Install and run flake8
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Setup Buildah
        run: |
          # Install buildah as alternative to Kaniko
          echo "Installing Buildah..."
          
          # Update package manager and install buildah
          sudo apt-get update
          sudo apt-get install -y buildah fuse-overlayfs
          
          # Configure buildah for rootless operation
          mkdir -p ~/.config/containers
          cat > ~/.config/containers/storage.conf << EOF
          [storage]
          driver = "vfs"
          runroot = "/tmp/containers/storage"
          graphroot = "/tmp/containers/storage"
          
          [storage.options]
          mount_program = "/usr/bin/fuse-overlayfs"
          EOF
          
          # Configure registries
          cat > ~/.config/containers/registries.conf << EOF
          [registries.search]
          registries = ['docker.io']
          
          [[registry]]
          location = "${{ env.GITEA_REGISTRY }}"
          insecure = true
          EOF
          
          # Set environment variables for buildah
          export BUILDAH_ISOLATION=chroot
          export TMPDIR=/tmp
          
          # Verify installation
          buildah version
          
          # Test registry connectivity
          echo "Testing registry connectivity..."
          curl -v -u "${{ secrets.REGISTRY_USERNAME }}:${{ secrets.REGISTRY_PASSWORD }}" \
               http://${{ env.GITEA_REGISTRY }}/v2/ || echo "Basic auth test completed"

      - name: Build and Push with Buildah
        run: |
          # Set environment variables for fully rootless operation
          export BUILDAH_ISOLATION=chroot
          export STORAGE_DRIVER=vfs
          export TMPDIR=/tmp
          export XDG_RUNTIME_DIR=/tmp/runtime-$(id -u)
          mkdir -p $XDG_RUNTIME_DIR
          
          # Debug: Check environment
          echo "Registry: ${{ env.GITEA_REGISTRY }}"
          echo "Destination: ${{ env.GITEA_REGISTRY }}/gitea-admin/grill-stats:latest"
          echo "Storage driver: $(buildah info --format '{{.store.GraphDriverName}}')"
          
          # Build the container image with maximum compatibility
          echo "Building container image..."
          buildah bud \
            --isolation=chroot \
            --storage-driver=vfs \
            --layers=false \
            --pull=false \
            --tag ${{ env.GITEA_REGISTRY }}/gitea-admin/grill-stats:latest \
            --file Dockerfile \
            .
          
          # Login to registry with basic auth
          echo "Logging into registry..."
          echo "${{ secrets.REGISTRY_PASSWORD }}" | buildah login \
            --username "${{ secrets.REGISTRY_USERNAME }}" \
            --password-stdin \
            --tls-verify=false \
            ${{ env.GITEA_REGISTRY }}
          
          # Push the image
          echo "Pushing image..."
          buildah push \
            --tls-verify=false \
            ${{ env.GITEA_REGISTRY }}/gitea-admin/grill-stats:latest
