apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-exporter-config
  namespace: grill-stats
  labels:
    app.kubernetes.io/name: postgres-exporter
    app.kubernetes.io/part-of: grill-stats
    app.kubernetes.io/component: monitoring
data:
  queries.yaml: |
    pg_replication:
      query: |
        SELECT
          CASE WHEN pg_is_in_recovery() THEN 1 ELSE 0 END AS is_replica,
          CASE WHEN pg_is_in_recovery() THEN
            EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp()))
          ELSE
            0
          END AS lag_seconds,
          CASE WHEN pg_is_in_recovery() THEN
            (SELECT count(*) FROM pg_stat_wal_receiver)
          ELSE
            (SELECT count(*) FROM pg_stat_replication)
          END AS connection_count
      metrics:
        - is_replica:
            usage: "GAUGE"
            description: "Indicates if the server is a replica (1) or primary (0)"
        - lag_seconds:
            usage: "GAUGE"
            description: "Replication lag in seconds"
        - connection_count:
            usage: "GAUGE"
            description: "Count of replication connections"

    pg_database_size:
      query: |
        SELECT datname, pg_database_size(datname) as size_bytes
        FROM pg_database
      metrics:
        - datname:
            usage: "LABEL"
            description: "Name of the database"
        - size_bytes:
            usage: "GAUGE"
            description: "Disk space used by the database in bytes"

    pg_stat_activity:
      query: |
        SELECT
          datname,
          count(*) as connection_count,
          count(*) FILTER (WHERE state = 'active') as active_count,
          count(*) FILTER (WHERE state = 'idle') as idle_count,
          count(*) FILTER (WHERE state = 'idle in transaction') as idle_in_txn_count,
          EXTRACT(EPOCH FROM (now() - MAX(CASE WHEN state='idle in transaction' THEN state_change ELSE NULL END))) as max_idle_in_txn_seconds
        FROM pg_stat_activity
        GROUP BY datname
      metrics:
        - datname:
            usage: "LABEL"
            description: "Name of the database"
        - connection_count:
            usage: "GAUGE"
            description: "Number of connections"
        - active_count:
            usage: "GAUGE"
            description: "Number of active connections"
        - idle_count:
            usage: "GAUGE"
            description: "Number of idle connections"
        - idle_in_txn_count:
            usage: "GAUGE"
            description: "Number of idle in transaction connections"
        - max_idle_in_txn_seconds:
            usage: "GAUGE"
            description: "Maximum idle in transaction time in seconds"

    pg_locks:
      query: |
        SELECT
          mode,
          count(*) as lock_count
        FROM pg_locks
        GROUP BY mode
      metrics:
        - mode:
            usage: "LABEL"
            description: "Lock mode"
        - lock_count:
            usage: "GAUGE"
            description: "Number of locks"

    pg_device_stats:
      query: |
        SELECT
          count(*) as total_devices,
          count(*) FILTER (WHERE is_active = true) as active_devices,
          count(*) FILTER (WHERE is_active = false) as inactive_devices
        FROM devices
      metrics:
        - total_devices:
            usage: "GAUGE"
            description: "Total number of devices"
        - active_devices:
            usage: "GAUGE"
            description: "Number of active devices"
        - inactive_devices:
            usage: "GAUGE"
            description: "Number of inactive devices"

    pg_device_health:
      query: |
        SELECT
          count(*) as total_records,
          avg(battery_level) as avg_battery_level,
          min(battery_level) as min_battery_level,
          count(*) FILTER (WHERE status = 'online') as online_devices,
          count(*) FILTER (WHERE status = 'offline') as offline_devices,
          avg(EXTRACT(EPOCH FROM (now() - last_seen))) as avg_last_seen_seconds
        FROM device_health
      metrics:
        - total_records:
            usage: "GAUGE"
            description: "Total number of device health records"
        - avg_battery_level:
            usage: "GAUGE"
            description: "Average battery level of all devices"
        - min_battery_level:
            usage: "GAUGE"
            description: "Minimum battery level of all devices"
        - online_devices:
            usage: "GAUGE"
            description: "Number of online devices"
        - offline_devices:
            usage: "GAUGE"
            description: "Number of offline devices"
        - avg_last_seen_seconds:
            usage: "GAUGE"
            description: "Average time since devices were last seen in seconds"
