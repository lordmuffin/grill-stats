---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: key-rotation-cronjob
  namespace: grill-stats
  labels:
    app: key-rotation
    component: security
spec:
  schedule: "0 2 * * 0"  # Every Sunday at 2 AM
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: key-rotation
            component: security
        spec:
          restartPolicy: OnFailure
          serviceAccountName: grill-stats-key-rotation
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            fsGroup: 1000
          containers:
          - name: key-rotation
            image: grill-stats/key-rotation:latest
            imagePullPolicy: Always
            command:
            - python3
            - /app/key-rotation-automation.py
            - --rotate
            env:
            - name: VAULT_URL
              value: "https://vault.vault.svc.cluster.local:8200"
            - name: VAULT_TOKEN_PATH
              value: "/vault/secrets/token"
            - name: VAULT_SKIP_VERIFY
              value: "true"
            - name: VAULT_TRANSIT_PATH
              value: "transit"
            - name: VAULT_KEY_NAME
              value: "thermoworks-user-credentials"
            - name: ROTATION_INTERVAL_HOURS
              value: "720"
            - name: MAX_KEY_AGE_DAYS
              value: "90"
            - name: MAX_USAGE_COUNT
              value: "1000000"
            - name: NOTIFICATION_WEBHOOK
              valueFrom:
                secretKeyRef:
                  name: notification-webhook-secret
                  key: url
                  optional: true
            - name: BACKUP_ENABLED
              value: "true"
            - name: BACKUP_PATH
              value: "/var/backups/vault-keys"
            - name: HEALTH_CHECK_INTERVAL_MINUTES
              value: "60"
            - name: MONITORING_ENABLED
              value: "true"
            - name: DRY_RUN
              value: "false"
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 1000
              capabilities:
                drop:
                - ALL
            volumeMounts:
            - name: backup-volume
              mountPath: /var/backups/vault-keys
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /etc/grill-stats
              readOnly: true
          volumes:
          - name: backup-volume
            persistentVolumeClaim:
              claimName: key-rotation-backup-pvc
          - name: tmp
            emptyDir: {}
          - name: config
            configMap:
              name: key-rotation-config
# Service account moved to vault-service-accounts.yaml
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: key-rotation-role
  namespace: grill-stats
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: key-rotation-role-binding
  namespace: grill-stats
subjects:
- kind: ServiceAccount
  name: grill-stats-key-rotation
  namespace: grill-stats
roleRef:
  kind: Role
  name: key-rotation-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: key-rotation-backup-pvc
  namespace: grill-stats
  labels:
    app: key-rotation
    component: security
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: key-rotation-config
  namespace: grill-stats
  labels:
    app: key-rotation
    component: security
data:
  key-rotation.json: |
    {
      "vault_url": "http://vault.vault.svc.cluster.local:8200",
      "transit_path": "transit",
      "key_name": "thermoworks-user-credentials",
      "rotation_interval_hours": 720,
      "max_key_age_days": 90,
      "max_usage_count": 1000000,
      "backup_enabled": true,
      "backup_path": "/var/backups/vault-keys",
      "health_check_interval_minutes": 60,
      "monitoring_enabled": true,
      "dry_run": false
    }
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: key-rotation-health-check
  namespace: grill-stats
  labels:
    app: key-rotation
    component: security
spec:
  schedule: "*/15 * * * *"  # Every 15 minutes
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: key-rotation
            component: security
        spec:
          restartPolicy: OnFailure
          serviceAccountName: grill-stats-key-rotation
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            fsGroup: 1000
          containers:
          - name: key-rotation-health-check
            image: grill-stats/key-rotation:latest
            imagePullPolicy: Always
            command:
            - python3
            - /app/key-rotation-automation.py
            - --health-check
            env:
            - name: VAULT_URL
              value: "https://vault.vault.svc.cluster.local:8200"
            - name: VAULT_TOKEN_PATH
              value: "/vault/secrets/token"
            - name: VAULT_SKIP_VERIFY
              value: "true"
            - name: VAULT_TRANSIT_PATH
              value: "transit"
            - name: VAULT_KEY_NAME
              value: "thermoworks-user-credentials"
            resources:
              requests:
                memory: "64Mi"
                cpu: "50m"
              limits:
                memory: "128Mi"
                cpu: "100m"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 1000
              capabilities:
                drop:
                - ALL
            volumeMounts:
            - name: tmp
              mountPath: /tmp
          volumes:
          - name: tmp
            emptyDir: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: notification-webhook-secret
  namespace: grill-stats
  labels:
    app: key-rotation
    component: security
type: Opaque
stringData:
  url: ""  # To be populated with actual webhook URL
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: key-rotation-monitor
  namespace: grill-stats
  labels:
    app: key-rotation
    component: security
spec:
  selector:
    matchLabels:
      app: key-rotation
  endpoints:
  - port: metrics
    interval: 60s
    path: /metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: key-rotation-scheduler
  namespace: grill-stats
  labels:
    app: key-rotation
    component: security
spec:
  replicas: 1
  selector:
    matchLabels:
      app: key-rotation
  template:
    metadata:
      labels:
        app: key-rotation
        component: security
    spec:
      serviceAccountName: grill-stats-key-rotation
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: key-rotation-scheduler
        image: grill-stats/key-rotation:latest
        imagePullPolicy: Always
        command:
        - python3
        - /app/key-rotation-automation.py
        - --config
        - /etc/grill-stats/key-rotation.json
        env:
        - name: VAULT_URL
          value: "https://vault.vault.svc.cluster.local:8200"
        - name: VAULT_TOKEN_PATH
          value: "/vault/secrets/token"
        - name: VAULT_SKIP_VERIFY
          value: "true"
        - name: NOTIFICATION_WEBHOOK
          valueFrom:
            secretKeyRef:
              name: notification-webhook-secret
              key: url
              optional: true
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: backup-volume
          mountPath: /var/backups/vault-keys
        - name: tmp
          mountPath: /tmp
        - name: config
          mountPath: /etc/grill-stats
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: backup-volume
        persistentVolumeClaim:
          claimName: key-rotation-backup-pvc
      - name: tmp
        emptyDir: {}
      - name: config
        configMap:
          name: key-rotation-config
---
apiVersion: v1
kind: Service
metadata:
  name: key-rotation-service
  namespace: grill-stats
  labels:
    app: key-rotation
    component: security
spec:
  selector:
    app: key-rotation
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
  type: ClusterIP
