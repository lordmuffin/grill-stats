---
# PostgreSQL Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
  namespace: grill-stats
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/part-of: grill-stats
    app.kubernetes.io/component: database
data:
  postgresql.conf: |
    # PostgreSQL Configuration for Grill Stats
    # Connection Settings
    listen_addresses = '*'
    port = 5432
    max_connections = 100
    superuser_reserved_connections = 3
    
    # Memory Settings
    shared_buffers = 256MB
    effective_cache_size = 512MB
    maintenance_work_mem = 64MB
    work_mem = 4MB
    
    # Checkpoint Settings
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    
    # Query Planner Settings
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    
    # Write Ahead Log Settings
    wal_level = replica
    max_wal_senders = 3
    max_replication_slots = 3
    wal_keep_segments = 32
    archive_mode = on
    archive_command = 'test ! -f /var/lib/postgresql/archive/%f && cp %p /var/lib/postgresql/archive/%f'
    
    # Logging Settings
    logging_collector = on
    log_destination = 'stderr'
    log_directory = '/var/lib/postgresql/data/pg_log'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_truncate_on_rotation = on
    log_rotation_age = 1d
    log_rotation_size = 100MB
    log_min_duration_statement = 1000
    log_checkpoints = on
    log_connections = on
    log_disconnections = on
    log_lock_waits = on
    log_statement = 'all'
    log_temp_files = 0
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    
    # Security Settings
    ssl = on
    ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'
    ssl_prefer_server_ciphers = on
    password_encryption = scram-sha-256
    
    # Performance Settings
    shared_preload_libraries = 'pg_stat_statements'
    track_activity_query_size = 2048
    pg_stat_statements.max = 10000
    pg_stat_statements.track = all
    
    # Autovacuum Settings
    autovacuum = on
    autovacuum_max_workers = 3
    autovacuum_naptime = 1min
    autovacuum_vacuum_threshold = 50
    autovacuum_analyze_threshold = 50
    autovacuum_vacuum_scale_factor = 0.2
    autovacuum_analyze_scale_factor = 0.1
    autovacuum_freeze_max_age = 200000000
    autovacuum_multixact_freeze_max_age = 400000000
    autovacuum_vacuum_cost_delay = 20ms
    autovacuum_vacuum_cost_limit = 200
    
    # Lock Settings
    deadlock_timeout = 1s
    max_locks_per_transaction = 64
    
    # Error Handling
    restart_after_crash = on
    
    # Locale Settings
    lc_messages = 'en_US.utf8'
    lc_monetary = 'en_US.utf8'
    lc_numeric = 'en_US.utf8'
    lc_time = 'en_US.utf8'
    
    # Time Zone
    timezone = 'UTC'
    
    # Statement Timeout
    statement_timeout = 0
    lock_timeout = 0
    idle_in_transaction_session_timeout = 0
    
    # Background Writer Settings
    bgwriter_delay = 200ms
    bgwriter_lru_maxpages = 100
    bgwriter_lru_multiplier = 2.0
    bgwriter_flush_after = 512kB
    
    # Write Ahead Log Settings
    wal_compression = on
    wal_log_hints = on
    checkpoint_timeout = 5min
    max_wal_size = 1GB
    min_wal_size = 80MB
    checkpoint_flush_after = 256kB
    
    # Parallel Query Settings
    max_parallel_workers_per_gather = 2
    max_parallel_workers = 4
    max_parallel_maintenance_workers = 2
    
    # JIT Settings (disable for smaller instances)
    jit = off
---
# PostgreSQL Host-Based Authentication
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-hba-config
  namespace: grill-stats
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/part-of: grill-stats
    app.kubernetes.io/component: database
data:
  pg_hba.conf: |
    # PostgreSQL Client Authentication Configuration File
    # TYPE  DATABASE        USER            ADDRESS                 METHOD
    
    # "local" is for Unix domain socket connections only
    local   all             postgres                                peer
    
    # IPv4 local connections:
    host    all             postgres        127.0.0.1/32            scram-sha-256
    host    all             postgres        ::1/128                 scram-sha-256
    
    # Allow replication connections from localhost, by a user with the
    # replication privilege.
    local   replication     postgres                                peer
    host    replication     postgres        127.0.0.1/32            scram-sha-256
    host    replication     postgres        ::1/128                 scram-sha-256
    
    # Application connections
    host    grill_stats     grill_stats_user    10.0.0.0/8          scram-sha-256
    host    grill_stats     grill_stats_user    172.16.0.0/12       scram-sha-256
    host    grill_stats     grill_stats_user    192.168.0.0/16      scram-sha-256
    
    # Service-specific connections
    host    grill_stats     auth_service        10.0.0.0/8          scram-sha-256
    host    grill_stats     device_service      10.0.0.0/8          scram-sha-256
    host    grill_stats     encryption_service  10.0.0.0/8          scram-sha-256
    host    grill_stats     temperature_service 10.0.0.0/8          scram-sha-256
    host    grill_stats     historical_service  10.0.0.0/8          scram-sha-256
    
    # Read-only connections
    host    grill_stats     readonly_user       10.0.0.0/8          scram-sha-256
    host    grill_stats     readonly_user       172.16.0.0/12       scram-sha-256
    host    grill_stats     readonly_user       192.168.0.0/16      scram-sha-256
    
    # Backup connections
    host    grill_stats     backup_user         10.0.0.0/8          scram-sha-256
    
    # Monitoring connections
    host    grill_stats     monitoring_user     10.0.0.0/8          scram-sha-256
    
    # Replication connections for HA
    host    replication     replication_user    10.0.0.0/8          scram-sha-256
    host    replication     replication_user    172.16.0.0/12       scram-sha-256
    host    replication     replication_user    192.168.0.0/16      scram-sha-256
    
    # Deny all other connections
    host    all             all                 0.0.0.0/0           reject
    host    all             all                 ::/0                reject
---
# PostgreSQL Exporter Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-exporter-config
  namespace: grill-stats
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/part-of: grill-stats
    app.kubernetes.io/component: monitoring
data:
  queries.yaml: |
    # PostgreSQL Exporter Custom Queries
    pg_replication:
      query: "SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag"
      master: true
      metrics:
        - lag:
            usage: "GAUGE"
            description: "Replication lag behind master in seconds"
    
    pg_postmaster:
      query: "SELECT pg_postmaster_start_time as start_time_seconds from pg_postmaster_start_time()"
      master: true
      metrics:
        - start_time_seconds:
            usage: "GAUGE"
            description: "Time at which postmaster started"
    
    pg_stat_user_tables:
      query: |
        SELECT
          current_database() datname,
          schemaname,
          relname,
          seq_scan,
          seq_tup_read,
          idx_scan,
          idx_tup_fetch,
          n_tup_ins,
          n_tup_upd,
          n_tup_del,
          n_tup_hot_upd,
          n_live_tup,
          n_dead_tup,
          n_mod_since_analyze,
          COALESCE(last_vacuum, '1970-01-01Z') as last_vacuum,
          COALESCE(last_autovacuum, '1970-01-01Z') as last_autovacuum,
          COALESCE(last_analyze, '1970-01-01Z') as last_analyze,
          COALESCE(last_autoanalyze, '1970-01-01Z') as last_autoanalyze,
          vacuum_count,
          autovacuum_count,
          analyze_count,
          autoanalyze_count
        FROM pg_stat_user_tables
      metrics:
        - datname:
            usage: "LABEL"
            description: "Database name"
        - schemaname:
            usage: "LABEL"
            description: "Schema name"
        - relname:
            usage: "LABEL"
            description: "Table name"
        - seq_scan:
            usage: "COUNTER"
            description: "Number of sequential scans initiated on this table"
        - seq_tup_read:
            usage: "COUNTER"
            description: "Number of live rows fetched by sequential scans"
        - idx_scan:
            usage: "COUNTER"
            description: "Number of index scans initiated on this table"
        - idx_tup_fetch:
            usage: "COUNTER"
            description: "Number of live rows fetched by index scans"
        - n_tup_ins:
            usage: "COUNTER"
            description: "Number of rows inserted"
        - n_tup_upd:
            usage: "COUNTER"
            description: "Number of rows updated"
        - n_tup_del:
            usage: "COUNTER"
            description: "Number of rows deleted"
        - n_tup_hot_upd:
            usage: "COUNTER"
            description: "Number of rows HOT updated"
        - n_live_tup:
            usage: "GAUGE"
            description: "Estimated number of live rows"
        - n_dead_tup:
            usage: "GAUGE"
            description: "Estimated number of dead rows"
        - n_mod_since_analyze:
            usage: "GAUGE"
            description: "Estimated number of rows modified since last analyze"
        - last_vacuum:
            usage: "GAUGE"
            description: "Last time at which this table was manually vacuumed"
        - last_autovacuum:
            usage: "GAUGE"
            description: "Last time at which this table was vacuumed by the autovacuum daemon"
        - last_analyze:
            usage: "GAUGE"
            description: "Last time at which this table was manually analyzed"
        - last_autoanalyze:
            usage: "GAUGE"
            description: "Last time at which this table was analyzed by the autovacuum daemon"
        - vacuum_count:
            usage: "COUNTER"
            description: "Number of times this table has been manually vacuumed"
        - autovacuum_count:
            usage: "COUNTER"
            description: "Number of times this table has been vacuumed by the autovacuum daemon"
        - analyze_count:
            usage: "COUNTER"
            description: "Number of times this table has been manually analyzed"
        - autoanalyze_count:
            usage: "COUNTER"
            description: "Number of times this table has been analyzed by the autovacuum daemon"
    
    pg_statio_user_tables:
      query: "SELECT current_database() datname, schemaname, relname, heap_blks_read, heap_blks_hit, idx_blks_read, idx_blks_hit, toast_blks_read, toast_blks_hit, tidx_blks_read, tidx_blks_hit FROM pg_statio_user_tables"
      metrics:
        - datname:
            usage: "LABEL"
            description: "Database name"
        - schemaname:
            usage: "LABEL"
            description: "Schema name"
        - relname:
            usage: "LABEL"
            description: "Table name"
        - heap_blks_read:
            usage: "COUNTER"
            description: "Number of disk blocks read from this table"
        - heap_blks_hit:
            usage: "COUNTER"
            description: "Number of buffer hits in this table"
        - idx_blks_read:
            usage: "COUNTER"
            description: "Number of disk blocks read from all indexes on this table"
        - idx_blks_hit:
            usage: "COUNTER"
            description: "Number of buffer hits in all indexes on this table"
        - toast_blks_read:
            usage: "COUNTER"
            description: "Number of disk blocks read from this table's TOAST table"
        - toast_blks_hit:
            usage: "COUNTER"
            description: "Number of buffer hits in this table's TOAST table"
        - tidx_blks_read:
            usage: "COUNTER"
            description: "Number of disk blocks read from this table's TOAST table indexes"
        - tidx_blks_hit:
            usage: "COUNTER"
            description: "Number of buffer hits in this table's TOAST table indexes"