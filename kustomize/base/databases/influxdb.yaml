apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: influxdb
  namespace: grill-stats
  labels:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/part-of: grill-stats
    app.kubernetes.io/component: database
    app.kubernetes.io/version: "2.7"
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  serviceName: influxdb-service
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb
        app.kubernetes.io/part-of: grill-stats
        app.kubernetes.io/component: database
        app.kubernetes.io/version: "2.7"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: influxdb
        image: influxdb:2.7-alpine
        ports:
        - containerPort: 8086
          name: http
        - containerPort: 8088
          name: rpc
        env:
        # InfluxDB 2.x Configuration
        - name: DOCKER_INFLUXDB_INIT_MODE
          value: "setup"
        - name: DOCKER_INFLUXDB_INIT_USERNAME
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: influxdb-admin-user
        - name: DOCKER_INFLUXDB_INIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: influxdb-admin-password
        - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: influxdb-admin-token
        - name: DOCKER_INFLUXDB_INIT_ORG
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: influxdb-org
        - name: DOCKER_INFLUXDB_INIT_BUCKET
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: influxdb-bucket
        - name: DOCKER_INFLUXDB_INIT_RETENTION
          valueFrom:
            secretKeyRef:
              name: influxdb-secrets
              key: influxdb-retention
        # Performance Configuration
        - name: INFLUXD_QUERY_CONCURRENCY
          value: "10"
        - name: INFLUXD_QUERY_QUEUE_SIZE
          value: "50"
        - name: INFLUXD_WRITE_TIMEOUT
          value: "30s"
        - name: INFLUXD_HTTP_BIND_ADDRESS
          value: ":8086"
        - name: INFLUXD_HTTP_REQUEST_TIMEOUT
          value: "0s"
        - name: INFLUXD_HTTP_MAX_BODY_SIZE
          value: "25000000"
        - name: INFLUXD_LOG_LEVEL
          value: "info"
        # Storage Configuration
        - name: INFLUXD_STORAGE_CACHE_MAX_MEMORY_SIZE
          value: "1073741824"
        - name: INFLUXD_STORAGE_CACHE_SNAPSHOT_MEMORY_SIZE
          value: "26214400"
        - name: INFLUXD_STORAGE_CACHE_SNAPSHOT_WRITE_COLD_DURATION
          value: "10m"
        - name: INFLUXD_STORAGE_COMPACT_FULL_WRITE_COLD_DURATION
          value: "4h"
        - name: INFLUXD_STORAGE_COMPACT_THROUGHPUT_BURST
          value: "50331648"
        - name: INFLUXD_STORAGE_MAX_CONCURRENT_COMPACTIONS
          value: "3"
        - name: INFLUXD_STORAGE_MAX_INDEX_LOG_FILE_SIZE
          value: "1048576"
        - name: INFLUXD_STORAGE_SERIES_ID_SET_CACHE_SIZE
          value: "100"
        resources:
          requests:
            cpu: 250m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 4Gi
        volumeMounts:
        - name: influxdb-data
          mountPath: /var/lib/influxdb2
        - name: influxdb-config
          mountPath: /etc/influxdb2
        - name: influxdb-init-scripts
          mountPath: /docker-entrypoint-initdb.d
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        readinessProbe:
          httpGet:
            path: /ping
            port: 8086
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /ping
            port: 8086
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /ping
            port: 8086
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: influxdb-config
        configMap:
          name: influxdb-config
      - name: influxdb-init-scripts
        configMap:
          name: influxdb-init-scripts
          defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: influxdb-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 100Gi
      storageClassName: standard
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb-service
  namespace: grill-stats
  labels:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/part-of: grill-stats
    app.kubernetes.io/component: database
    app.kubernetes.io/version: "2.7"
spec:
  selector:
    app.kubernetes.io/name: influxdb
  ports:
  - name: http
    port: 8086
    targetPort: http
    protocol: TCP
  - name: rpc
    port: 8088
    targetPort: rpc
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb-headless
  namespace: grill-stats
  labels:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/part-of: grill-stats
    app.kubernetes.io/component: database
    app.kubernetes.io/version: "2.7"
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: influxdb
  ports:
  - name: http
    port: 8086
    targetPort: http
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb-metrics
  namespace: grill-stats
  labels:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/part-of: grill-stats
    app.kubernetes.io/component: database
    app.kubernetes.io/version: "2.7"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8086"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app.kubernetes.io/name: influxdb
  ports:
  - name: metrics
    port: 8086
    targetPort: http
    protocol: TCP
  type: ClusterIP