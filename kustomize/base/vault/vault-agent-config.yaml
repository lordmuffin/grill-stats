---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-agent-config
  namespace: grill-stats
  labels:
    app: vault-agent
    component: security
data:
  vault-agent.hcl: |
    # Vault Agent configuration for grill-stats services
    exit_after_auth = false
    pid_file = "/vault/pidfile"
    
    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "grill-stats-encryption"
        }
      }
    
      sink "file" {
        config = {
          path = "/vault/secrets/token"
          mode = 0644
        }
      }
    }
    
    cache {
      use_auto_auth_token = true
    }
    
    listener "tcp" {
      address = "127.0.0.1:8200"
      tls_disable = true
    }
    
    template {
      source = "/vault/templates/encryption-config.tpl"
      destination = "/vault/secrets/encryption-config.json"
      perms = 0644
    }
    
    template {
      source = "/vault/templates/api-config.tpl"
      destination = "/vault/secrets/api-config.json"
      perms = 0644
    }
    
    vault {
      address = "https://vault.vault.svc.cluster.local:8200"
      tls_skip_verify = true
    }
  
  encryption-config.tpl: |
    {
      "vault_addr": "https://vault.vault.svc.cluster.local:8200",
      "transit_path": "transit",
      "encryption_keys": {
        "user_credentials": "thermoworks-user-credentials-{{ env "ENVIRONMENT" | default "prod" }}",
        "api_tokens": "thermoworks-api-tokens-{{ env "ENVIRONMENT" | default "prod" }}",
        "device_credentials": "thermoworks-device-credentials-{{ env "ENVIRONMENT" | default "prod" }}"
      },
      "token_path": "/vault/secrets/token",
      "auto_renewal": true,
      "ttl": "1h",
      "max_ttl": "24h"
    }
  
  api-config.tpl: |
    {
      "vault_config": {
        "address": "https://vault.vault.svc.cluster.local:8200",
        "token_path": "/vault/secrets/token",
        "tls_skip_verify": true,
        "timeout": "30s",
        "retry_max": 3
      },
      "encryption_config": {
        "transit_path": "transit",
        "key_names": {
          "user_credentials": "thermoworks-user-credentials-{{ env "ENVIRONMENT" | default "prod" }}",
          "api_tokens": "thermoworks-api-tokens-{{ env "ENVIRONMENT" | default "prod" }}",
          "device_credentials": "thermoworks-device-credentials-{{ env "ENVIRONMENT" | default "prod" }}"
        },
        "batch_size": 100,
        "timeout": "10s"
      }
    }
  
  vault-agent-key-rotation.hcl: |
    # Vault Agent configuration for key rotation service
    exit_after_auth = false
    pid_file = "/vault/pidfile"
    
    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "grill-stats-key-rotation"
        }
      }
    
      sink "file" {
        config = {
          path = "/vault/secrets/token"
          mode = 0644
        }
      }
    }
    
    cache {
      use_auto_auth_token = true
    }
    
    listener "tcp" {
      address = "127.0.0.1:8200"
      tls_disable = true
    }
    
    template {
      source = "/vault/templates/key-rotation-config.tpl"
      destination = "/vault/secrets/key-rotation-config.json"
      perms = 0644
    }
    
    vault {
      address = "https://vault.vault.svc.cluster.local:8200"
      tls_skip_verify = true
    }
  
  key-rotation-config.tpl: |
    {
      "vault_addr": "https://vault.vault.svc.cluster.local:8200",
      "token_path": "/vault/secrets/token",
      "transit_path": "transit",
      "environments": {
        "prod": {
          "user_credentials_key": "thermoworks-user-credentials-prod",
          "api_tokens_key": "thermoworks-api-tokens-prod",
          "device_credentials_key": "thermoworks-device-credentials-prod",
          "rotation_interval": "2160h",
          "max_key_age": "90d"
        },
        "dev": {
          "user_credentials_key": "thermoworks-user-credentials-dev",
          "api_tokens_key": "thermoworks-api-tokens-dev",
          "device_credentials_key": "thermoworks-device-credentials-dev",
          "rotation_interval": "720h",
          "max_key_age": "30d"
        },
        "staging": {
          "user_credentials_key": "thermoworks-user-credentials-staging",
          "api_tokens_key": "thermoworks-api-tokens-staging",
          "device_credentials_key": "thermoworks-device-credentials-staging",
          "rotation_interval": "1440h",
          "max_key_age": "60d"
        }
      },
      "notification_config": {
        "webhook_url": "{{ with secret "secret/notification-webhook" }}{{ .Data.url }}{{ end }}",
        "slack_channel": "#grill-stats-alerts",
        "email_recipients": ["admin@grillstats.com"]
      },
      "audit_config": {
        "enabled": true,
        "log_path": "/vault/audit/key-rotation.log",
        "retention_days": 90
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-agent
  namespace: grill-stats
  labels:
    app: vault-agent
    component: security
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault-agent
  template:
    metadata:
      labels:
        app: vault-agent
        component: security
    spec:
      serviceAccountName: grill-stats-encryption
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: vault-agent
        image: hashicorp/vault:latest
        command: ["vault"]
        args: ["agent", "-config=/vault/config/vault-agent.hcl"]
        env:
        - name: VAULT_ADDR
          value: "https://vault.vault.svc.cluster.local:8200"
        - name: VAULT_SKIP_VERIFY
          value: "true"
        - name: ENVIRONMENT
          value: "prod"
        ports:
        - name: vault-agent
          containerPort: 8200
          protocol: TCP
        volumeMounts:
        - name: vault-config
          mountPath: /vault/config
          readOnly: true
        - name: vault-templates
          mountPath: /vault/templates
          readOnly: true
        - name: vault-secrets
          mountPath: /vault/secrets
        - name: vault-audit
          mountPath: /vault/audit
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /v1/sys/health
            port: 8200
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /v1/sys/health
            port: 8200
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: vault-config
        configMap:
          name: vault-agent-config
      - name: vault-templates
        configMap:
          name: vault-agent-config
      - name: vault-secrets
        emptyDir:
          medium: Memory
      - name: vault-audit
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: vault-agent
  namespace: grill-stats
  labels:
    app: vault-agent
    component: security
spec:
  selector:
    app: vault-agent
  ports:
  - name: vault-agent
    port: 8200
    targetPort: 8200
  type: ClusterIP