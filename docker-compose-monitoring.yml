version: '3.8'

services:
  # Prometheus for metric collection
  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ./database-monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./database-monitoring/prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - grill-stats-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.0.0
    volumes:
      - ./database-monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./database-monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel
      - GF_SERVER_ROOT_URL=http://localhost:3001
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    ports:
      - "3001:3000"
    restart: unless-stopped
    networks:
      - grill-stats-network
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PostgreSQL exporter
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.14.0
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@postgres:5432/grill_stats?sslmode=disable
      - PG_EXPORTER_EXTEND_QUERY_PATH=/etc/postgres_exporter/queries.yaml
    volumes:
      - ./database-monitoring/exporters/postgres-queries.yaml:/etc/postgres_exporter/queries.yaml
    ports:
      - "9187:9187"
    restart: unless-stopped
    networks:
      - grill-stats-network
    depends_on:
      - postgres

  # InfluxDB exporter
  influxdb-exporter:
    image: influxdb:1.8
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      apt-get update && apt-get install -y curl &&
      while true; do
        curl -s http://influxdb:8086/metrics > /tmp/metrics.txt;
        sleep 15;
      done
      "
    volumes:
      - ./database-monitoring/exporters/influxdb-exporter.yaml:/etc/influxdb-exporter/config.yaml
    ports:
      - "9122:9122"
    restart: unless-stopped
    networks:
      - grill-stats-network
    depends_on:
      - influxdb

  # Redis exporter
  redis-exporter:
    image: oliver006/redis_exporter:v1.54.0
    command:
      - '--redis.addr=redis://redis:6379'
      - '--web.listen-address=:9121'
      - '--web.telemetry-path=/metrics'
      - '--script=/etc/redis_exporter/script.lua'
    volumes:
      - ./database-monitoring/exporters/redis-exporter-script.lua:/etc/redis_exporter/script.lua
    ports:
      - "9121:9121"
    restart: unless-stopped
    networks:
      - grill-stats-network
    depends_on:
      - redis

  # Alert Manager for alert notifications
  alertmanager:
    image: prom/alertmanager:v0.26.0
    volumes:
      - ./database-monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    restart: unless-stopped
    networks:
      - grill-stats-network
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  grill-stats-network:
    external: true
