apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grill-stats-core-services
  namespace: argocd
  labels:
    app.kubernetes.io/name: grill-stats-core-services
    app.kubernetes.io/part-of: grill-stats
    app.kubernetes.io/component: core-services
    app.kubernetes.io/managed-by: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: grill-stats

  source:
    repoURL: https://github.com/lordmuffin/grill-stats.git
    targetRevision: main
    path: kustomize/base/core-services

  destination:
    server: https://kubernetes.default.svc
    namespace: grill-stats

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    - ApplyOutOfSyncOnly=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m

  revisionHistoryLimit: 10

  info:
  - name: Description
    value: ThermoWorks BBQ monitoring core microservices
  - name: Environment
    value: prod-lab
  - name: Services
    value: auth, device, temperature, historical, encryption, web-ui

  # Ignore differences in dynamic fields
  ignoreDifferences:
  - group: 'apps'
    kind: Deployment
    jsonPointers:
    - /spec/replicas
    - /spec/template/spec/containers/0/image
    - /spec/template/spec/containers/0/resources
  - group: ''
    kind: Service
    jsonPointers:
    - /spec/clusterIP
    - /spec/clusterIPs
  - group: 'autoscaling'
    kind: HorizontalPodAutoscaler
    jsonPointers:
    - /status
    - /spec/metrics

  # Custom health checks for microservices
  health:
    - group: 'apps'
      kind: Deployment
      check: |
        health_status = {}
        if obj.status ~= nil then
          if obj.status.readyReplicas ~= nil and obj.status.replicas ~= nil then
            if obj.status.readyReplicas == obj.status.replicas then
              health_status.status = "Healthy"
              health_status.message = "All replicas are ready"
              return health_status
            elseif obj.status.readyReplicas ~= nil and obj.status.readyReplicas > 0 then
              health_status.status = "Progressing"
              health_status.message = "Some replicas are ready"
              return health_status
            end
          end
        end
        health_status.status = "Progressing"
        health_status.message = "Deployment is being updated"
        return health_status

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grill-stats-core-services-dev
  namespace: argocd
  labels:
    app.kubernetes.io/name: grill-stats-core-services-dev
    app.kubernetes.io/part-of: grill-stats
    app.kubernetes.io/component: core-services
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/environment: dev-lab
  annotations:
    argocd.argoproj.io/sync-wave: "3"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: grill-stats

  source:
    repoURL: https://github.com/lordmuffin/grill-stats.git
    targetRevision: develop
    path: kustomize/overlays/dev-lab
    directory:
      include: '{core-services,namespace}/**'

  destination:
    server: https://kubernetes.default.svc
    namespace: grill-stats-dev

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    - ApplyOutOfSyncOnly=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m

  revisionHistoryLimit: 5

  info:
  - name: Description
    value: Development core microservices
  - name: Environment
    value: dev-lab
  - name: Services
    value: auth, device, temperature, historical, encryption, web-ui
  - name: Configuration
    value: Development settings with lower resources

  # Ignore differences in dynamic fields
  ignoreDifferences:
  - group: 'apps'
    kind: Deployment
    jsonPointers:
    - /spec/replicas
    - /spec/template/spec/containers/0/image
    - /spec/template/spec/containers/0/resources
  - group: ''
    kind: Service
    jsonPointers:
    - /spec/clusterIP
    - /spec/clusterIPs

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grill-stats-ingress
  namespace: argocd
  labels:
    app.kubernetes.io/name: grill-stats-ingress
    app.kubernetes.io/part-of: grill-stats
    app.kubernetes.io/component: ingress
    app.kubernetes.io/managed-by: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "4"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: grill-stats

  source:
    repoURL: https://github.com/lordmuffin/grill-stats.git
    targetRevision: main
    path: kustomize/base/ingress

  destination:
    server: https://kubernetes.default.svc
    namespace: grill-stats

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m

  revisionHistoryLimit: 10

  info:
  - name: Description
    value: Ingress configuration and TLS certificates
  - name: Environment
    value: prod-lab
  - name: Components
    value: Traefik IngressRoute, Middleware, Certificates

  # Ignore differences in certificate status
  ignoreDifferences:
  - group: 'cert-manager.io'
    kind: Certificate
    jsonPointers:
    - /status
  - group: 'traefik.containo.us'
    kind: IngressRoute
    jsonPointers:
    - /status
